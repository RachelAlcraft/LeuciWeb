
@{
    ViewData["Title"] = "Matrix";
    Layout = "~/Views/Shared/_LayoutDensity.cshtml";
}
<h3>Raw Density Matrix - @ViewBag.PdbCode</h3>
<hr />
<div>
<h5>Interactive matrix explorer - planes</h5>

@using (Html.BeginForm("Plane", "Matrix", FormMethod.Post))
    {
        <table cellpadding="0" cellspacing="0"><!-- style="background-color:PowderBlue">-->
            <tr style="height:25%">
                <th colspan="1" align="center">Layer</th>
                <th>Click to choose plane</th>
                <th>Click to increment layer</th>
            </tr>            
            <tr style="height:25%">                
                <td>
                    <input type="text" id="layer" name="layer" align="center" value=@ViewBag.Layer>
                </td>
                <td>
                                @Html.ActionLink(
                            linkText: "XY Plane",
                            actionName: "Plane",
                            controllerName: "Matrix",
                            routeValues: new {
                            pdbcode = @ViewBag.PdbCode,
                            plane = "XY",
                            layer = @ViewBag.Layer
                            },
                            htmlAttributes: null
                            )
                                <span> ~ </span>
                                @Html.ActionLink(
                            linkText: "YZ Plane",
                            actionName: "Plane",
                controllerName: "Matrix",
                            routeValues: new {
                            pdbcode = @ViewBag.PdbCode,
                            plane = "YZ",
                            layer = @ViewBag.Layer
                            },
                            htmlAttributes: null
                            )
                                <span> ~ </span>
                                @Html.ActionLink(
                            linkText: "ZX Plane",
                            actionName: "Plane",
                controllerName: "Matrix",
                            routeValues: new {
                            pdbcode = @ViewBag.PdbCode,
                            plane = "ZX",
                            layer = @ViewBag.Layer
                            },
                            htmlAttributes: null
                            )
                </td>
                <td>
                                @Html.ActionLink(
                            linkText: " - 1",
                            actionName: "Plane",
                            controllerName: "Matrix",
                            routeValues: new {
                            pdbcode = @ViewBag.PdbCode,
                            plane = @ViewBag.Plane,
                            layer = @ViewBag.Layer - 1
                            },
                            htmlAttributes: null
                            )
                                <span> ~ </span>
                                @Html.ActionLink(
                            linkText: " + 1",
                            actionName: "Plane",
                            controllerName: "Matrix",
                            routeValues: new {
                            pdbcode = @ViewBag.PdbCode,
                            plane = @ViewBag.Plane,
                            layer = @ViewBag.Layer + 1
                            },
                            htmlAttributes: null
                            )
                </td>
            </tr>            
            <tr><!-- style="height:25%;background-color:Crimson;">-->
                <th>
                    <input type="submit" value="Jump to"/><br/>
                    <input style="visibility:hidden;height:0px;width:0px;margin:0px;padding:0px;display:none" type="text" id="pdbcode" name="pdbcode" value=@ViewBag.PdbCode>
                    </th>
                <td>Chosen plane= @ViewBag.Plane</td>
                <td>Chosen layer= @ViewBag.Layer / @ViewBag.LayerMax</td>
            </tr>
        </table>
    }
    
</div>
<br/>


<table>
    <tr>
        <td style="width: 450px;">
            Plane
            <br />
            <div id="myCountour" style="width:100%"></div>
            <br />
            @Html.ActionLink(
            linkText: "Toggle Plot",
            actionName: "Plane",
            controllerName: "Matrix",
            routeValues: new {
            planeplot = "+1",
            pdbcode = @ViewBag.PdbCode,
            },
            htmlAttributes: null
            )
        </td>
        <td style="width: 450px;">
            Values
            <br />
            <div id="myDiv" style="width:100%"></div>            
            <br />
        </td>
        
    </tr>
</table>

    <!--<div>
        <div id="myCountour" style="width:40%"></div>
    <hr/>
        <div id="myDiv" style="width:40%"></div>
    </div>
    -->

        
<script>
    var jx = @Html.Raw(Json.Serialize(@ViewBag.MtxX));
    var jy = @Html.Raw(Json.Serialize(@ViewBag.MtxY));
    var jz = @Html.Raw(Json.Serialize(@ViewBag.MtxZ));    
    var jv = @Html.Raw(Json.Serialize(@ViewBag.MtxV));    
    var minv = @Html.Raw(Json.Serialize(@ViewBag.MinV));    
    var maxv = @Html.Raw(Json.Serialize(@ViewBag.MaxV));  
    var planeplot = @Html.Raw(Json.Serialize(@ViewBag.PlanePlot));
                    
    var layoutH = {
        autosize: true,
        title: 'Electron density values in this plane'     
    };

    var traceH = {
    x: jz,
    type: 'histogram',
    nbinsx: 50,
    marker: {
        color: "Crimson",
        line: {
            color:  "Silver", 
            width: 1
        }
    }
    };
    var dataH = [traceH];
    var config = { responsive: true }

    Plotly.newPlot('myDiv', dataH,layoutH,config);
    
    var minc = minv
    var maxc = 3
    var size = (maxc - minc)/10
    var zero_frac = 0.001    
    var cs = []
    if (minc < 0){
        zero_frac = (0 - minc) / (maxc-minc)
        var lev1 = zero_frac + 0.1*(1-zero_frac)
        var lev2 = zero_frac + 0.3*(1-zero_frac)
        var lev3 = zero_frac + 0.5*(1-zero_frac)
        cs =  [[0,'RosyBrown'],[String(zero_frac+0.001),'AliceBlue'],[String(lev1),'LightBlue'],[String(lev2),'CornflowerBlue'],[String(lev3),'Crimson'],[1,'rgb(100, 0, 0)']]
    }
    else{
        cs =  [[0,'AliceBlue'],[0.25,'LightBlue'],[0.5,'CornflowerBlue'],[0.75,'Crimson'],[1,'rgb(100, 0, 0)']]
    }
    cs =  [[0,'AliceBlue'],[0.25,'LightBlue'],[0.5,'CornflowerBlue'],[0.75,'Crimson'],[1,'rgb(100, 0, 0)']]
    
    
    var data = [ {
		z: jv,
		x: jx,
		y: jy,
        type: planeplot,
        colorscale: cs,
        reversescale : false,
        autocontour: false,
        line : {
            width:0.5,            
            color:'DimGray'
        },
        contours: {
            start: minc,
            end: maxc,
            size: size            
        },
        showscale: false,
        colorbar: {
            thickness: 15,
        }
    }];

    var layout = {
        autosize: true,
        title: 'Contour plot of electron density plane',
        xaxis: {        
        showgrid: false,
        zeroline: false
        },
        yaxis: {
        scaleanchor: 'x',
        scaleratio: 1
        }
    };
    
    
    Plotly.newPlot('myCountour', data,layout,config);
        
</script>

@{
    ViewData["Title"] = "Slice";
    Layout = "~/Views/Shared/_LayoutDensity.cshtml";
}
<h3>Slice though Density Matrix - @ViewBag.PdbCode</h3>
<hr />
<div>                
    @using (Html.BeginForm("Slice", "Matrix", FormMethod.Post))
    {
        <table cellpadding="0" cellspacing="0" style="width:100%;table-layout: fixed;">
            <tr>
                <th style="width:6%;" colspan="1" align="center">                  
                  <input type="submit" value="Submit" />
                  <input style="visibility:hidden;height:0px;width:0px;margin:0px;padding:0px;display:none" type="text" id="pdbcode" name="pdbcode" value=@ViewBag.PdbCode>
                </th>
                <th style="width:8%;" colspan="1" align="center">Atom</th>
                <th style="width:15%;" colspan="1" align="center">(x,y,z)</th>
                <th style="width:6%;" colspan="1" align="center">distance</th>
                <th style="width:35%;" colspan="1" align="center">Controls</th>
                <th style="width:30%;" colspan="1" align="center">Navigation</th>
            </tr>                        
            <tr>
                <td>central</td>
                <td><input style="color:@ViewBag.CColor" type="text" id="ca" name="ca" value=@ViewBag.cAtom></td>
                <td><input style=";" type="text" id="c_xyz" name="c_xyz" value=@ViewBag.cXYZ></td>
                <td><div id="cdistance">@ViewBag.CDistance</div></td>                
                <td rowspan="3" style="height:30px;text-align:justify">    
                    <div class="inner-tbl">
                <table>
                    <tr>
                        <td>
                        <table>
                            <tr>
                                <td>Fos=</td>
                                <td><input style=";" type="text" id="fos" name="fos" value=@ViewBag.Fos></td>
                                <td>Fcs=</td>
                                <td><input style=";" type="text" id="fcs" name="fcs" value=@ViewBag.Fcs></td>
                            </tr>
                            </table>
                         </td>                        
                    </tr>
                    <tr>
                        <td>
                            <table>
                                <tr>
                                <td width="20%">
                                    Interp=
                                </td>
                                <td width="25%">
                                    @ViewBag.Interp
                                </td>
                                <td width="55%">
                                    [
                                    @Html.ActionLink(
                                linkText: "nearest",
                                actionName: "Slice",
                                controllerName: "Matrix",
                                routeValues: new {
                                interp = "0",
                                pdbcode = @ViewBag.PdbCode,
                                c_xyz = @ViewBag.cXYZ,
                                l_xyz = @ViewBag.lXYZ,
                                p_xyz = @ViewBag.pXYZ,
                                ca = @ViewBag.cAtom,
                                la = @ViewBag.lAtom,
                                pa = @ViewBag.pAtom,
                                fos = @ViewBag.Fos,
                                fcs = @ViewBag.Fcs,
                                },
                                htmlAttributes: null
                                )
                                ,                                
                                    @Html.ActionLink(
                                linkText: "linear",
                                actionName: "Slice",
                                controllerName: "Matrix",
                                routeValues: new {
                                interp = "1",
                                pdbcode = @ViewBag.PdbCode,
                                c_xyz = @ViewBag.cXYZ,
                                l_xyz = @ViewBag.lXYZ,
                                p_xyz = @ViewBag.pXYZ,
                                ca = @ViewBag.cAtom,
                                la = @ViewBag.lAtom,
                                pa = @ViewBag.pAtom,
                                fos = @ViewBag.Fos,
                                fcs = @ViewBag.Fcs,
                                },
                                htmlAttributes: null
                                ),                                 
                                @Html.ActionLink(
                                linkText: "bspline",
                                actionName: "Slice",
                                controllerName: "Matrix",
                                routeValues: new {
                                interp = "s3",
                                pdbcode = @ViewBag.PdbCode,
                                c_xyz = @ViewBag.cXYZ,
                                l_xyz = @ViewBag.lXYZ,
                                p_xyz = @ViewBag.pXYZ,
                                ca = @ViewBag.cAtom,
                                la = @ViewBag.lAtom,
                                pa = @ViewBag.pAtom,
                                fos = @ViewBag.Fos,
                                fcs = @ViewBag.Fcs,
                                },
                                htmlAttributes: null
                                )
                            ]
                                </td>
                            </tr>
                            </table>
                        </td>
                    </tr>                            
                    <tr>
                        <td>
                            <table>
                                <tr>
                                    <td>
                            Width(Å)=
                        </td>
                                <td>
                            <input style="width:80px;" type="text" id="width" name="width" value=@ViewBag.Width>                        
                        </td>
                                <td>
                               [
                    @Html.ActionLink(
                    linkText: "+0.5",
                    actionName: "Slice",
                    controllerName: "Matrix",
                    routeValues: new {
                    width = "-2",
                    pdbcode = @ViewBag.PdbCode,
                    c_xyz = @ViewBag.cXYZ,
                    l_xyz = @ViewBag.lXYZ,
                    p_xyz = @ViewBag.pXYZ,
                    ca = @ViewBag.cAtom,
                    la = @ViewBag.lAtom,
                    pa = @ViewBag.pAtom,
                    fos = @ViewBag.Fos,
                    fcs = @ViewBag.Fcs,
                    },
                    htmlAttributes: null
                    )
                    ,
                    @Html.ActionLink(
                    linkText: "-0.5",
                    actionName: "Slice",
                    controllerName: "Matrix",
                    routeValues: new {
                    width = "-3",
                    pdbcode = @ViewBag.PdbCode,
                    c_xyz = @ViewBag.cXYZ,
                    l_xyz = @ViewBag.lXYZ,
                    p_xyz = @ViewBag.pXYZ,
                    ca = @ViewBag.cAtom,
                    la = @ViewBag.lAtom,
                    pa = @ViewBag.pAtom,
                    fos = @ViewBag.Fos,
                    fcs = @ViewBag.Fcs,
                    },
                    htmlAttributes: null
                    )
                    ]
                        </td>
                    
                    </tr>
                    </table>
                    </td>                         
                    <tr>
                        <td>
                            <table>
                                <tr>
                                            <td>
                                                Gap(Å)  =
                                            </td>
                                            <td>
                                                <input style="width:80px;" type="text" id="gap" name="gap" value=@ViewBag.Gap>
                                            </td>
                                            <td>
                                                [@Html.ActionLink(
                                            linkText: "+0.01",
                                            actionName: "Slice",
                                            controllerName: "Matrix",
                                            routeValues: new {
                                            gap = "-2",
                                            pdbcode = @ViewBag.PdbCode,
                                            },htmlAttributes: null
                                            ),@Html.ActionLink(
                                            linkText: "-0.01",
                                            actionName: "Slice",
                                            controllerName: "Matrix",
                                            routeValues: new {
                                            gap = "-3",
                                            pdbcode = @ViewBag.PdbCode,
                                            c_xyz = @ViewBag.cXYZ,
                                            l_xyz = @ViewBag.lXYZ,
                                            p_xyz = @ViewBag.pXYZ,
                                            ca = @ViewBag.cAtom,
                                            la = @ViewBag.lAtom,
                                            pa = @ViewBag.pAtom,
                                            fos = @ViewBag.Fos,
                                            fcs = @ViewBag.Fcs,
                                            },htmlAttributes: null
                                            )]
                                            </td>
                                </tr>
                            </table>
                        </td>                        
                    </tr>                                                
                    <tr>
                        <td>
                            <table>
                                <tr>
                                    <td>
                            Vol Level=
                        </td>
                        <td>
                            <span><input style="width:70%;" type="text" id="sdcap" name="sdcap" value=@ViewBag.SdCap></span>
                        </td>
                        <td>
                            [@Html.ActionLink(
                        linkText: "+0.1",
                        actionName: "Slice",
                        controllerName: "Matrix",
                        routeValues: new {
                        sdcap = @ViewBag.SdCap + 0.1,
                        pdbcode = @ViewBag.PdbCode,
                        c_xyz = @ViewBag.cXYZ,
                        l_xyz = @ViewBag.lXYZ,
                        p_xyz = @ViewBag.pXYZ,
                        ca = @ViewBag.cAtom,
                        la = @ViewBag.lAtom,
                        pa = @ViewBag.pAtom,
                        fos = @ViewBag.Fos,
                        fcs = @ViewBag.Fcs,
                        },htmlAttributes: null
                        ),@Html.ActionLink(
                        linkText: "-0.1",
                        actionName: "Slice",
                        controllerName: "Matrix",
                        routeValues: new {
                        sdcap = @ViewBag.SdCap - 0.1,
                        pdbcode = @ViewBag.PdbCode,
                        c_xyz = @ViewBag.cXYZ,
                        l_xyz = @ViewBag.lXYZ,
                        p_xyz = @ViewBag.pXYZ,
                        ca = @ViewBag.cAtom,
                        la = @ViewBag.lAtom,
                        pa = @ViewBag.pAtom,
                        fos = @ViewBag.Fos,
                        fcs = @ViewBag.Fcs,
                        },htmlAttributes: null
                        )]
                        (sd's)
                        </td>
                                </tr>
                            </table>
                        </td>                        
                    </tr>
                    </table>     
                    </div>
                    <!--<input type="image" src="~/images/calc.png" style="width:18px;height:18px;vertical-align:text-bottom" />-->
               </td>
                <td rowspan="3" style="height:30px;text-align:justify">
                    <table>
                        <tr>
                            <td></td>
                        </tr>
                    </table>
                        
            </tr>
            <tr>
                <td>linear</td>
                <td><input style="color:@ViewBag.LColor;" type="text" id="la" name="la" value=@ViewBag.lAtom></td>
                <td><input style="" type="text" id="l_xyz" name="l_xyz" value=@ViewBag.lXYZ></td>
                <td>@ViewBag.LDistance</td>
            </tr>
            <tr>
                <td>planar</td>
                <td><input style="color:@ViewBag.PColor;" type="text" id="pa" name="pa" value=@ViewBag.pAtom></td>
                <td><input style="" type="text" id="p_xyz" name="p_xyz" value=@ViewBag.pXYZ></td>
                <td>@ViewBag.PDistance</td>
            </tr>                                                                        
        </table>        
    }
      
</div>
<a href=@ViewBag.BrowseAtoms target="_blank">Browse atoms</a>
<br />

<hr />
<div class="inner-tbl">
    <table>
        <tr>
            <td>
                Density - @ViewBag.DenPlot
            </td>
            <td>
                Radient - @ViewBag.RadPlot
            </td>
            <td>
                Laplacian - @ViewBag.LapPlot
            </td>
        </tr>            
        <tr>
            <td style="width: 450px;">                            
                [
                @Html.ActionLink(
                linkText: "Toggle Plot",
                actionName: "Slice",
                controllerName: "Matrix",
                routeValues: new {
                denplot = "+1",
                pdbcode = @ViewBag.PdbCode,
                c_xyz = @ViewBag.cXYZ,
                l_xyz = @ViewBag.lXYZ,
                p_xyz = @ViewBag.pXYZ,
                ca = @ViewBag.cAtom,
                la = @ViewBag.lAtom,
                pa = @ViewBag.pAtom,
                fos = @ViewBag.Fos,
                fcs = @ViewBag.Fcs,
                },
                htmlAttributes: null
                )
                ] [                
                @Html.ActionLink(
                linkText: "Toggle Hue",
                actionName: "Slice",
                controllerName: "Matrix",
                routeValues: new {
                denhue = "+1",
                pdbcode = @ViewBag.PdbCode,
                c_xyz = @ViewBag.cXYZ,
                l_xyz = @ViewBag.lXYZ,
                p_xyz = @ViewBag.pXYZ,
                ca = @ViewBag.cAtom,
                la = @ViewBag.lAtom,
                pa = @ViewBag.pAtom,
                fos = @ViewBag.Fos,
                fcs = @ViewBag.Fcs,
                },
                htmlAttributes: null
                )
                ] [
                @Html.ActionLink(
                linkText: "Toggle Bar",
                actionName: "Slice",
                controllerName: "Matrix",
                routeValues: new {
                denbar = "+1",
                pdbcode = @ViewBag.PdbCode,
                c_xyz = @ViewBag.cXYZ,
                l_xyz = @ViewBag.lXYZ,
                p_xyz = @ViewBag.pXYZ,
                ca = @ViewBag.cAtom,
                la = @ViewBag.lAtom,
                pa = @ViewBag.pAtom,
                fos = @ViewBag.Fos,
                fcs = @ViewBag.Fcs,
                },
                htmlAttributes: null
                )
                ]
            </td>            
            <td style="width: 450px;">                                
                [
                @Html.ActionLink(
                linkText: "Toggle Plot",
                actionName: "Slice",
                controllerName: "Matrix",
                routeValues: new {
                radplot = "+1",
                pdbcode = @ViewBag.PdbCode,
                c_xyz = @ViewBag.cXYZ,
                l_xyz = @ViewBag.lXYZ,
                p_xyz = @ViewBag.pXYZ,
                ca = @ViewBag.cAtom,
                la = @ViewBag.lAtom,
                pa = @ViewBag.pAtom,
                fos = @ViewBag.Fos,
                fcs = @ViewBag.Fcs,
                },
                htmlAttributes: null
                )
                ] [
                @Html.ActionLink(
                linkText: "Toggle Hue",
                actionName: "Slice",
                controllerName: "Matrix",
                routeValues: new {
                radhue = "+1",
                pdbcode = @ViewBag.PdbCode,
                c_xyz = @ViewBag.cXYZ,
                l_xyz = @ViewBag.lXYZ,
                p_xyz = @ViewBag.pXYZ,
                ca = @ViewBag.cAtom,
                la = @ViewBag.lAtom,
                pa = @ViewBag.pAtom,
                fos = @ViewBag.Fos,
                fcs = @ViewBag.Fcs,
                },
                htmlAttributes: null
                )
                ] [
                @Html.ActionLink(
                linkText: "Toggle Bar",
                actionName: "Slice",
                controllerName: "Matrix",
                routeValues: new {
                radbar = "+1",
                pdbcode = @ViewBag.PdbCode,
                c_xyz = @ViewBag.cXYZ,
                l_xyz = @ViewBag.lXYZ,
                p_xyz = @ViewBag.pXYZ,
                ca = @ViewBag.cAtom,
                la = @ViewBag.lAtom,
                pa = @ViewBag.pAtom,
                fos = @ViewBag.Fos,
                fcs = @ViewBag.Fcs,
                },
                htmlAttributes: null
                )
                ]
            </td>
            <td style="width: 450px;">                                                
                [
                @Html.ActionLink(
                linkText: "Toggle Plot",
                actionName: "Slice",
                controllerName: "Matrix",
                routeValues: new {
                lapplot = "+1",
                pdbcode = @ViewBag.PdbCode,
                c_xyz = @ViewBag.cXYZ,
                l_xyz = @ViewBag.lXYZ,
                p_xyz = @ViewBag.pXYZ,
                ca = @ViewBag.cAtom,
                la = @ViewBag.lAtom,
                pa = @ViewBag.pAtom,
                fos = @ViewBag.Fos,
                fcs = @ViewBag.Fcs,
                },
                htmlAttributes: null
                )
                ] [
                @Html.ActionLink(
                linkText: "Toggle Hue",
                actionName: "Slice",
                controllerName: "Matrix",
                routeValues: new {
                laphue = "+1",
                pdbcode = @ViewBag.PdbCode,
                c_xyz = @ViewBag.cXYZ,
                l_xyz = @ViewBag.lXYZ,
                p_xyz = @ViewBag.pXYZ,
                ca = @ViewBag.cAtom,
                la = @ViewBag.lAtom,
                pa = @ViewBag.pAtom,
                fos = @ViewBag.Fos,
                fcs = @ViewBag.Fcs,
                },
                htmlAttributes: null
                )
                ] [
                @Html.ActionLink(
                linkText: "Toggle Bar",
                actionName: "Slice",
                controllerName: "Matrix",
                routeValues: new {
                lapbar = "+1",
                pdbcode = @ViewBag.PdbCode,
                c_xyz = @ViewBag.cXYZ,
                l_xyz = @ViewBag.lXYZ,
                p_xyz = @ViewBag.pXYZ,
                ca = @ViewBag.cAtom,
                la = @ViewBag.lAtom,
                pa = @ViewBag.pAtom,
                fos = @ViewBag.Fos,
                fcs = @ViewBag.Fcs,
                },
                htmlAttributes: null
                )
                ]
                </td>        
            </tr>
            <tr>
                <td>
                    <div id="myCountour"></div>
                </td>
                <td>
                    <div id="myCountourRad"></div>
                </td>
                <td>
                    <div id="myCountourLap"></div>
                </td>
            </tr>
    </table>
</div>
<hr />



<div>
    </p>@ViewBag.Error<p>
</div>



<div>
    <h3>Admin Area</h3>
    <div>
        <p>Extra interpolations</p>    
    <table>
        <tr>
            <td width="20%">
                Interp=
            </td>
            <td width="25%">
                @ViewBag.Interp
            </td>
            <td width="55%">
                [
                @Html.ActionLink(
                linkText: "nearest",
                actionName: "Slice",
                controllerName: "Matrix",
                routeValues: new {
                interp = "0",
                pdbcode = @ViewBag.PdbCode,
                c_xyz = @ViewBag.cXYZ,
                l_xyz = @ViewBag.lXYZ,
                p_xyz = @ViewBag.pXYZ,
                ca = @ViewBag.cAtom,
                la = @ViewBag.lAtom,
                pa = @ViewBag.pAtom,
                    fos = @ViewBag.Fos,
                    fcs = @ViewBag.Fcs,
                },
                htmlAttributes: null
                )
                ,
                @Html.ActionLink(
                linkText: "linear",
                actionName: "Slice",
                controllerName: "Matrix",
                routeValues: new {
                interp = "1",
                pdbcode = @ViewBag.PdbCode,
                c_xyz = @ViewBag.cXYZ,
                l_xyz = @ViewBag.lXYZ,
                p_xyz = @ViewBag.pXYZ,
                ca = @ViewBag.cAtom,
                la = @ViewBag.lAtom,
                pa = @ViewBag.pAtom,
                fos = @ViewBag.Fos,
                        fcs = @ViewBag.Fcs,
                },
                htmlAttributes: null
                ),
                @Html.ActionLink(
                linkText: "cubic",
                actionName: "Slice",
                controllerName: "Matrix",
                routeValues: new {
                interp = "3",
                pdbcode = @ViewBag.PdbCode,
                c_xyz = @ViewBag.cXYZ,
                l_xyz = @ViewBag.lXYZ,
                p_xyz = @ViewBag.pXYZ,
                ca = @ViewBag.cAtom,
                la = @ViewBag.lAtom,
                pa = @ViewBag.pAtom,
                    fos = @ViewBag.Fos,
                    fcs = @ViewBag.Fcs,
                },
                htmlAttributes: null
                ),
                @Html.ActionLink(
                linkText: "bspline",
                actionName: "Slice",
                controllerName: "Matrix",
                routeValues: new {
                interp = "s3",
                pdbcode = @ViewBag.PdbCode,
                c_xyz = @ViewBag.cXYZ,
                l_xyz = @ViewBag.lXYZ,
                p_xyz = @ViewBag.pXYZ,
                ca = @ViewBag.cAtom,
                la = @ViewBag.lAtom,
                pa = @ViewBag.pAtom,
                fos = @ViewBag.Fos,
                        fcs = @ViewBag.Fcs,
                },
                htmlAttributes: null
                ),
                @Html.ActionLink(
                linkText: "bs-whole",
                actionName: "Slice",
                controllerName: "Matrix",
                routeValues: new {
                interp = "s5",
                pdbcode = @ViewBag.PdbCode,
                c_xyz = @ViewBag.cXYZ,
                l_xyz = @ViewBag.lXYZ,
                p_xyz = @ViewBag.pXYZ,
                ca = @ViewBag.cAtom,
                la = @ViewBag.lAtom,
                pa = @ViewBag.pAtom,
                    fos = @ViewBag.Fos,
                    fcs = @ViewBag.Fcs,
                },
                htmlAttributes: null
                )
                ]
            </td>
        </tr>
    </table>
    </div>
    <div>
        <p>Toggle between values and standard deviation</p>
        <table>
            <tr>
                <td>
                    Density=
                </td>
                <td>
                    @ViewBag.ValSd
                </td>
                <td>
                    [@Html.ActionLink(
                    linkText: "st.devs",
                    actionName: "Slice",
                    controllerName: "Matrix",
                    routeValues: new {
                    valsd = "s.d.",
                    pdbcode = @ViewBag.PdbCode,
                    c_xyz = @ViewBag.cXYZ,
                    l_xyz = @ViewBag.lXYZ,
                    p_xyz = @ViewBag.pXYZ,
                    ca = @ViewBag.cAtom,
                    la = @ViewBag.lAtom,
                    pa = @ViewBag.pAtom,
                    fos = @ViewBag.Fos,
                    fcs = @ViewBag.Fcs,
                    },
                    htmlAttributes: null
                    ),@Html.ActionLink(
                    linkText: "values",
                    actionName: "Slice",
                    controllerName: "Matrix",
                    routeValues: new {
                    valsd = "electrons",
                    pdbcode = @ViewBag.PdbCode,
                    c_xyz = @ViewBag.cXYZ,
                    l_xyz = @ViewBag.lXYZ,
                    p_xyz = @ViewBag.pXYZ,
                    ca = @ViewBag.cAtom,
                    la = @ViewBag.lAtom,
                    pa = @ViewBag.pAtom,
                    fos = @ViewBag.Fos,
                    fcs = @ViewBag.Fcs,
                    },
                    htmlAttributes: null
                    )]
                </td>
            </tr>
        </table>
    </div>
</div>





<script>
    var jx = @Html.Raw(Json.Serialize(@ViewBag.SliceAxis));
    var jy = @Html.Raw(Json.Serialize(@ViewBag.SliceAxis));    
    var jv = @Html.Raw(Json.Serialize(@ViewBag.SliceDensity));
    var jpX = @Html.Raw(Json.Serialize(@ViewBag.SlicePositionX));    
    var jpY = @Html.Raw(Json.Serialize(@ViewBag.SlicePositionY));    
    var jvr = @Html.Raw(Json.Serialize(@ViewBag.SliceRadient));
    var jvl = @Html.Raw(Json.Serialize(@ViewBag.SliceLaplacian));
    var minv = -2
    var maxv = 10    
    var minl = @Html.Raw(Json.Serialize(@ViewBag.LMin));
    var maxl = @Html.Raw(Json.Serialize(@ViewBag.LMax));
    
    var denmin = @Html.Raw(Json.Serialize(@ViewBag.DenMin));
    var denmax = @Html.Raw(Json.Serialize(@ViewBag.DenMax));
    var numsd = @Html.Raw(Json.Serialize(@ViewBag.ThreeSd));
    
    var dhue = @Html.Raw(Json.Serialize(@ViewBag.DenHue));
    var rhue = @Html.Raw(Json.Serialize(@ViewBag.RadHue));
    var lhue = @Html.Raw(Json.Serialize(@ViewBag.LapHue));

    var dbar = @Html.Raw(Json.Serialize(@ViewBag.DenBar));
    var rbar = @Html.Raw(Json.Serialize(@ViewBag.RadBar));
    var lbar = @Html.Raw(Json.Serialize(@ViewBag.LapBar));

    var minc = denmin
    var maxc = Math.round(numsd*100)/100
    var size = (maxc - minc) / 20
    var zero_frac = 0.001            
    zero_frac = (0 - minc) / (maxc - minc)
    var lev1 = zero_frac + 0.1 * (1 - zero_frac)    
    var lev2 = zero_frac + 0.2 * (1 - zero_frac)
    var lev3 = zero_frac + 0.75 * (1 - zero_frac)
            
    var zero_frac_lap = 0.001
    var cs = []
            
    if (dhue == "RedBlueGrey"){
        cs = [  [0, 'DimGray'], 
                [String(zero_frac + 0.0001), 'Snow'], 
                [String(zero_frac + 0.0002), 'LightBlue'], 
                [String(lev1), 'LightBlue'], 
                [String(lev2), 'CornflowerBlue'], 
                [String(lev3), 'Crimson'],
                [1, 'rgb(100, 0, 0)']]
    }    
    else if (dhue == "BlackWhite") {
        cs = [[0, 'Snow'], [1, 'Black']]
    }
    else if (dhue == "RedBlueZero") {
        cs = [[0, 'CornflowerBlue'], [String(zero_frac), 'Snow'], [1, 'Crimson']]
    }
    else {
        cs = [[0, 'LightBlue'], [0.99, 'rgb(100, 0, 0)'],[0.99, 'Black']]
    }
                 
    var sizel = (maxl - minl) / 20
    zero_frac_lap = (0 - minl) / (maxl - minl)  
    var lev1 = zero_frac_lap + 0.1 * (1 - zero_frac)
    var lev2 = zero_frac_lap + 0.3 * (1 - zero_frac)
    var lev3 = zero_frac_lap + 0.5 * (1 - zero_frac)
    if (lhue == "RedBlueGrey") {
        cs_lap = [[0, 'DimGray'], [String(zero_frac_lap + 0.001), 'AliceBlue'], [String(lev1), 'LightBlue'], [String(lev2), 'CornflowerBlue'], [String(lev3), 'Crimson'], [1, 'rgb(100, 0, 0)']]
    }
    else if (lhue == "BlackWhite") {
        cs_lap = [[0, 'Snow'], [1, 'Black']]
    }
    else if (lhue == "RedBlueZero") {
        cs_lap = [[0, 'CornflowerBlue'], [String(zero_frac_lap), 'AliceBlue'],[String(lev1), 'Snow'], [1, 'Crimson']]
    }
    else {
        cs_lap = [[0, 'LightBlue'], [0.99, 'rgb(100, 0, 0)'],[1, 'Black']]
    }
      
   if (rhue == "RedBlueGrey") {
        cs_rad = [[0, 'DimGray'], [String(0.001), 'AliceBlue'], [String(lev1), 'LightBlue'], [String(lev2), 'CornflowerBlue'], [String(lev3), 'Crimson'], [1, 'rgb(100, 0, 0)']]
   }
    else if (rhue == "BlackWhite") {
        cs_rad = [[0, 'Black'], [1, 'Snow']]
   }
   else if (rhue == "RedBlueZero") {
        cs_lap = [[0, 'CornflowerBlue'], [0.49, 'AliceBlue'],[0.51, 'Snow'], [1, 'Crimson']]
    }
   else {
        cs_rad = [[0, 'LightBlue'], [0.99, 'rgb(100, 0, 0)'],[1, 'Black']]
   }

   var denplot = @Html.Raw(Json.Serialize(@ViewBag.DenPlot));
   var radplot = @Html.Raw(Json.Serialize(@ViewBag.RadPlot));
   var lapplot = @Html.Raw(Json.Serialize(@ViewBag.LapPlot));


    var huetitle = @Html.Raw(Json.Serialize(@ViewBag.ValSd)) + "<br>max=" + denmax;
    
    var dataP = {        
        x: jpX,
        y: jpY,
        mode: 'markers',
        type: "scatter",
        colorscale: [[0, 'rgba(0,0,0,0)'], [1, 'rgba(0, 100, 0,1)']],
        showscale: false,     
        name:"pos data",
        marker: {
            color: 'yellow',
            size: 5,            
        },
    }

    if (denplot == "heatmap"){
        var dataV = {
            z: jv,
            x: jx,
            y: jy,
            type: denplot,
            colorscale: cs,
            reversescale: false,            
            line: {
                width: 0.5,
                color: 'DimGray'
            },            
            showscale: dbar,
            colorbar: {
                thickness: 15,
                title: huetitle,
            },            
            name:"val data",
        };
    }
    else{
        var dataV = {
            z: jv,
            x: jx,
            y: jy,
            type: denplot,
            colorscale: cs,
            reversescale: false,
            autocontour: false,
            line: {
                width: 0.5,
                color: 'DimGray'
            },
            contours: {
                start: minc,
                end: maxc,
                size: size
            },
            showscale:dbar,
            colorbar: {
                thickness: 15,
                title:huetitle,            
            },
            name: "val data",
        };
    }

    data = [dataV,dataP]
   
    var dataR = [{
        z: jvr,
        x: jx,
        y: jy,
        type: radplot,
        colorscale: cs_rad,
        reversescale: false,
        autocontour: true,
        line: {
            width: 0,
            color: 'DimGray'
        },        
        showscale: rbar,
        colorbar: {
            thickness: 15,
            title:"l1 norm of P1",            
        }
    }, dataP];
        
    var dataL = [{
        z: jvl,
        x: jx,
        y: jy,
        type: lapplot,
        colorscale: cs_lap,
        reversescale: true,
        autocontour: true,
        line: {
            width: 0.5,
            color: 'DimGray'
        },        
        showscale: lbar,
        colorbar: {
            thickness: 15,
            title:"sum of P2",
        },
        contours: {
                start: minl,
                end: maxl,
                size: sizel
            },
    }, dataP];
    
    var layout = {
        grid: { rows: 1, columns: 1, pattern: 'independent' },
        autosize: true,
        title: '',
        showlegend: false,        
        xaxis: {
            showgrid: false,
            zeroline: false,
            visible: false,
        },
        xaxis2: {
            showgrid: false,
            zeroline: false,
            visible: false,
        },
        yaxis: {
            scaleanchor: 'x',
            scaleratio: 1,
            visible: false,
        },
        yaxis2: {
            scaleanchor: 'x',
            scaleratio: 1,
            visible: false,
        },
        margin: {
            l: 20,
            r: 20,
            b: 20,
            t: 20,
            pad: 4
        },  
        colorbar: {
            textangle:-90,            
        },        
    };
    
    var config = { responsive: true }

    annos = {}
         
    Plotly.newPlot('myCountour', data, layout, config,annos);    
    Plotly.newPlot('myCountourRad', dataR, layout, config);
    Plotly.newPlot('myCountourLap', dataL, layout, config);
    
</script>

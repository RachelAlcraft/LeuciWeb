@{
    ViewData["Title"] = "Slice";
    Layout = "~/Views/Shared/_LayoutDensity.cshtml";
}
<h3>Slice though Density Matrix - @ViewBag.PdbCode</h3>
<hr />
@using (Html.BeginForm("Slice", "Matrix", FormMethod.Post))
{
<!--A hidden area to house all the view bag values in this where the entire body is a form-->
<!-- Once they are used elsewhere they are removed - there MUST BE ONLY ONE FIELD for each of these in this form -->
<div style="visibility:hidden;height:0px;width:0px;margin:0px;padding:0px;display:none">
<!--<div>-->
    <input id="t1"  value="0"  name="t1"/>
    <input id="t2"  value="0"  name="t2"/>
    <input id="t3"  value="0"  name="t3"/>
    <input id="t4"  value="0"  name="t4"/>
    <input id="nav"  value=""  name="nav"/>    
    denplot<input id="denplot"  value=@ViewBag.DenPlot  name="denplot"/>
    radplot<input id="radplot"  value=@ViewBag.RadPlot  name="radplot"/>
    lapplot<input id="lapplot"  value=@ViewBag.LapPlot  name="lapplot"/>
    denhue<input id="denhue"  value=@ViewBag.DenHue  name="denhue"/>
    radhue<input id="radhue"  value=@ViewBag.RadHue  name="radhue"/>
    laphue<input id="laphue"  value=@ViewBag.LapHue  name="laphue"/>
    denbar<input id="denbar"  value=@ViewBag.DenBar  name="denbar"/>
    radbar<input id="radbar"  value=@ViewBag.RadBar  name="radbar"/>
    lapbar<input id="lapbar"  value=@ViewBag.LapBar  name="lapbar"/>
    valsd<input id="valsd"  value=@ViewBag.ValSd  name="valsd"/>
    pdbcode<input id="pdbcode"  value=@ViewBag.PdbCode  name="pdbcode"/>
    interp<input id="interp"    value=@ViewBag.Interp   name="interp"/>
    c_xyz=@ViewBag.cXYZ     <!--<input id="c_xyz"  value=@ViewBag.cXYZ     name="c_xyz"/>-->
    l_xyz=@ViewBag.lXYZ     <!--<input id="l_xyz"  value=@ViewBag.lXYZ     name="l_xyz"/>-->
    p_xyz=@ViewBag.pXYZ     <!--<input id="p_xyz"  value=@ViewBag.pXYZ     name="p_xyz"/>-->
    ca=@ViewBag.cAtom        <!--<input id="ca"    value=@ViewBag.cAtom    name="ca"/>-->
    la=@ViewBag.lAtom        <!--<input id="la"    value=@ViewBag.lAtom    name="la"/>-->
    pa=@ViewBag.pAtom        <!--<input id="pa"    value=@ViewBag.pAtom    name="pa"/>-->
    fos=@ViewBag.Fos       <!--<input id="fos"     value=@ViewBag.Fos      name="fos"/>-->
    fcs=@ViewBag.Fcs       <!--<input id="fcs"     value=@ViewBag.Fcs      name="fcs"/>-->
    width=@ViewBag.Width<!--<input id="width"      value=@ViewBag.Width    name="width"/>-->
    gap=@ViewBag.Gap<!--<input id="gap"            value=@ViewBag.Gap      name="gap"/>-->
    ydots<input id="ydots"      value=@ViewBag.YellowDots name="ydots"/>
    gdots<input id="gdots"      value=@ViewBag.GreenDots name="gdots"/>
    sdcap=@ViewBag.SdCap<!--<input id="sdcap"      value=@ViewBag.SdCap    name="width"/>-->
    sdfloor=@ViewBag.SdFloor<!--<input id="sdfloor" value=@ViewBag.SdFloor    name="width"/>-->
</div>

<div class="tab">
<span>
    <input type="submit" value="Atoms" id="Atoms" onclick="ChangeTab('t1')" style="border:none;"/>
    <input type="submit" value="Settings" id="Settings" onclick="ChangeTab('t2')" style="border:none;"/>
    <!--<input type="submit" value="Navigation" id="Navigation" onclick="ChangeTab('t3')" style="border:none;"/>-->
    <input type="submit" value="Advanced" id="Advanced" onclick="ChangeTab('t4')" style="border:none;" />    
</span>
</div>
<!--##################################### TAB DISPLAY SECTION - ATOMS ############################################# -->
<div id="Atoms" class="tabcontent" style="display:@ViewBag.T1Display">
    <h3>Atoms</h3>
    <div>
        <table>
        <tr>
            <td style="width:85%;">
            <table cellpadding="0" cellspacing="0" style="width:100%;table-layout: fixed;">
            <tr>
            <th style="width:6%;" colspan="1" align="center">                                    
            <input type="submit" value="Submit" /></th>
            <th style="width:8%;" colspan="1" align="center">Atom</th>
            <th style="width:15%;" colspan="1" align="center">(x,y,z)</th>
            <th style="width:6%;" colspan="1" align="center">distance</th>                
            </tr>                        
        <tr>
            <td>central</td>
            <td><input style="color:@ViewBag.CColor" type="text" id="ca" name="ca" value=@ViewBag.cAtom></td>
            <td><input type="text" id="c_xyz" name="c_xyz" value=@ViewBag.cXYZ></td>
            <td><div id="cdistance">@ViewBag.CDistance</div></td>                
        </tr>
        <tr>
            <td>linear</td>
            <td><input style="color:@ViewBag.LColor" type="text" id="la" name="la" value=@ViewBag.lAtom></td>
            <td><input type="text" id="l_xyz" name="l_xyz" value=@ViewBag.lXYZ></td>
            <td><div id="ldistance">@ViewBag.LDistance</div></td>                
        </tr>
        <tr>
            <td>planar</td>
            <td><input style="color:@ViewBag.PColor" type="text" id="pa" name="pa" value=@ViewBag.pAtom></td>
            <td><input type="text" id="p_xyz" name="p_xyz" value=@ViewBag.pXYZ></td>
            <td><div id="pdistance">@ViewBag.PDistance</div></td>                
        </tr>
        </table>         
        </td>   
        <td>
        <!-- https://stackoverflow.com/questions/34639583/how-can-i-create-responsive-joystick-layout-buttons-in-html   -->
        <p style="color:crimson;text-align:center">Navigation</p>
        <div id="joystick" style="width:100%;text-align:center;align-content:center">
                            
            <svg width="100%" height="100%" viewBox="0 0 100 100" style="text-align:center;">
                <defs>
                    <linearGradient id="grad1" x1="0%" y1="0%" x2="0%" y2="100%">
                        <stop offset="0%" style="stop-color:rgb(16,16,16);stop-opacity:1" />
                        <stop offset="100%" style="stop-color:rgb(240,240,240);stop-opacity:1" />
                    </linearGradient>
                    <linearGradient id="grad2" x1="0%" y1="0%" x2="0%" y2="100%">
                        <stop offset="0%" style="stop-color:rgb(240,240,240);stop-opacity:1" />
                        <stop offset="100%" style="stop-color:rgb(16,16,16);stop-opacity:1" />
                    </linearGradient>
                    <linearGradient id="grad3" x1="0%" y1="0%" x2="0%" y2="100%">
                        <stop offset="0%" style="stop-color:rgb(168,168,168);stop-opacity:1" />
                        <stop offset="100%" style="stop-color:rgb(239,239,239);stop-opacity:1" />
                    </linearGradient>
                </defs>
                <circle cx="50" cy="50" r="38" fill="url(#grad1)" />
                <circle cx="50" cy="50" r="38" fill="url(#grad2)" stroke="black" stroke-width="1.5px" />
                <circle cx="50" cy="50" r="38" fill="url(#grad3)" />
                <circle cx="50" cy="50" r="20" fill="#cccccc" stroke="black" stroke-width="2px"/>                                
                 <!--<a href="/Matrix/Slice">-->
                <a href="Slice?nav=tilt_up&denbar=@ViewBag.DenBar&radbar=@ViewBag.RadBar&lapbar=@ViewBag.LapBar&denhue=@ViewBag.DenHue&radhue=@ViewBag.RadHue&laphue=@ViewBag.LapHue&denplot=@ViewBag.DenPlot&radplot=@ViewBag.RadPlot&lapplot=@ViewBag.LapPlot&pdbcode=@ViewBag.PdbCode&c_xyz=@ViewBag.cXYZ&l_xyz=@ViewBag.lXYZ&p_xyz=@ViewBag.pXYZ&ca=@ViewBag.cAtom&la=@ViewBag.lAtom&pa=@ViewBag.pAtom&fos=@ViewBag.Fos&fcs=@ViewBag.Fcs&width=@ViewBag.Width&gap=@ViewBag.Gap&ydots=@ViewBag.YellowDots&gdots=@ViewBag.GreenDots&sdcap=@ViewBag.SdCap&sdfloor=@ViewBag.SdFloor">
                <path d="M50,0 54,8 46,8Z" fill="rgba(0,0,0,0.8)"><title>tilt over</title></path></a>
                
                <a href="Slice?nav=up&denbar=@ViewBag.DenBar&radbar=@ViewBag.RadBar&lapbar=@ViewBag.LapBar&denhue=@ViewBag.DenHue&radhue=@ViewBag.RadHue&laphue=@ViewBag.LapHue&denplot=@ViewBag.DenPlot&radplot=@ViewBag.RadPlot&lapplot=@ViewBag.LapPlot&pdbcode=@ViewBag.PdbCode&c_xyz=@ViewBag.cXYZ&l_xyz=@ViewBag.lXYZ&p_xyz=@ViewBag.pXYZ&ca=@ViewBag.cAtom&la=@ViewBag.lAtom&pa=@ViewBag.pAtom&fos=@ViewBag.Fos&fcs=@ViewBag.Fcs&width=@ViewBag.Width&gap=@ViewBag.Gap&ydots=@ViewBag.YellowDots&gdots=@ViewBag.GreenDots&sdcap=@ViewBag.SdCap&sdfloor=@ViewBag.SdFloor">
                <path d="M50,14 54,22 46,22Z" fill="rgba(0,0,0,0.8)"><title>up</title></path></a>
                
                <a href="Slice?nav=down&denbar=@ViewBag.DenBar&radbar=@ViewBag.RadBar&lapbar=@ViewBag.LapBar&denhue=@ViewBag.DenHue&radhue=@ViewBag.RadHue&laphue=@ViewBag.LapHue&denplot=@ViewBag.DenPlot&radplot=@ViewBag.RadPlot&lapplot=@ViewBag.LapPlot&pdbcode=@ViewBag.PdbCode&c_xyz=@ViewBag.cXYZ&l_xyz=@ViewBag.lXYZ&p_xyz=@ViewBag.pXYZ&ca=@ViewBag.cAtom&la=@ViewBag.lAtom&pa=@ViewBag.pAtom&fos=@ViewBag.Fos&fcs=@ViewBag.Fcs&width=@ViewBag.Width&gap=@ViewBag.Gap&ydots=@ViewBag.YellowDots&gdots=@ViewBag.GreenDots&sdcap=@ViewBag.SdCap&sdfloor=@ViewBag.SdFloor">
                <path d="M50,86 54,78 46,78Z" fill="rgba(0,0,0,0.8)"><title>down</title></path></a>
                
                <a href="Slice?nav=tilt_down&denbar=@ViewBag.DenBar&radbar=@ViewBag.RadBar&lapbar=@ViewBag.LapBar&denhue=@ViewBag.DenHue&radhue=@ViewBag.RadHue&laphue=@ViewBag.LapHue&denplot=@ViewBag.DenPlot&radplot=@ViewBag.RadPlot&lapplot=@ViewBag.LapPlot&pdbcode=@ViewBag.PdbCode&c_xyz=@ViewBag.cXYZ&l_xyz=@ViewBag.lXYZ&p_xyz=@ViewBag.pXYZ&ca=@ViewBag.cAtom&la=@ViewBag.lAtom&pa=@ViewBag.pAtom&fos=@ViewBag.Fos&fcs=@ViewBag.Fcs&width=@ViewBag.Width&gap=@ViewBag.Gap&ydots=@ViewBag.YellowDots&gdots=@ViewBag.GreenDots&sdcap=@ViewBag.SdCap&sdfloor=@ViewBag.SdFloor">
                <path d="M50,100 54,92 46,92Z" fill="rgba(0,0,0,0.8)"><title>tilt under</title></path></a>
                
                <a href="Slice?nav=left&denbar=@ViewBag.DenBar&radbar=@ViewBag.RadBar&lapbar=@ViewBag.LapBar&denhue=@ViewBag.DenHue&radhue=@ViewBag.RadHue&laphue=@ViewBag.LapHue&denplot=@ViewBag.DenPlot&radplot=@ViewBag.RadPlot&lapplot=@ViewBag.LapPlot&pdbcode=@ViewBag.PdbCode&c_xyz=@ViewBag.cXYZ&l_xyz=@ViewBag.lXYZ&p_xyz=@ViewBag.pXYZ&ca=@ViewBag.cAtom&la=@ViewBag.lAtom&pa=@ViewBag.pAtom&fos=@ViewBag.Fos&fcs=@ViewBag.Fcs&width=@ViewBag.Width&gap=@ViewBag.Gap&ydots=@ViewBag.YellowDots&gdots=@ViewBag.GreenDots&sdcap=@ViewBag.SdCap&sdfloor=@ViewBag.SdFloor">
                <path d="M14,50 22,54 22,46Z" fill="rgba(0,0,0,0.8)"><title>left</title></path></a>
                
                <a href="Slice?nav=tilt_left&denbar=@ViewBag.DenBar&radbar=@ViewBag.RadBar&lapbar=@ViewBag.LapBar&denhue=@ViewBag.DenHue&radhue=@ViewBag.RadHue&laphue=@ViewBag.LapHue&denplot=@ViewBag.DenPlot&radplot=@ViewBag.RadPlot&lapplot=@ViewBag.LapPlot&pdbcode=@ViewBag.PdbCode&c_xyz=@ViewBag.cXYZ&l_xyz=@ViewBag.lXYZ&p_xyz=@ViewBag.pXYZ&ca=@ViewBag.cAtom&la=@ViewBag.lAtom&pa=@ViewBag.pAtom&fos=@ViewBag.Fos&fcs=@ViewBag.Fcs&width=@ViewBag.Width&gap=@ViewBag.Gap&ydots=@ViewBag.YellowDots&gdots=@ViewBag.GreenDots&sdcap=@ViewBag.SdCap&sdfloor=@ViewBag.SdFloor">
                <path d="M0,50 8,54 8,46Z" fill="rgba(0,0,0,0.8)"><title>tilt left</title></path></a>
                
                <a href="Slice?nav=right&denbar=@ViewBag.DenBar&radbar=@ViewBag.RadBar&lapbar=@ViewBag.LapBar&denhue=@ViewBag.DenHue&radhue=@ViewBag.RadHue&laphue=@ViewBag.LapHue&denplot=@ViewBag.DenPlot&radplot=@ViewBag.RadPlot&lapplot=@ViewBag.LapPlot&pdbcode=@ViewBag.PdbCode&c_xyz=@ViewBag.cXYZ&l_xyz=@ViewBag.lXYZ&p_xyz=@ViewBag.pXYZ&ca=@ViewBag.cAtom&la=@ViewBag.lAtom&pa=@ViewBag.pAtom&fos=@ViewBag.Fos&fcs=@ViewBag.Fcs&width=@ViewBag.Width&gap=@ViewBag.Gap&ydots=@ViewBag.YellowDots&gdots=@ViewBag.GreenDots&sdcap=@ViewBag.SdCap&sdfloor=@ViewBag.SdFloor">
                <path d="M86,50 78,54 78,46Z" fill="rgba(0,0,0,0.8)"><title>right</title></path></a>
                
                <a href="Slice?nav=tilt_right&denbar=@ViewBag.DenBar&radbar=@ViewBag.RadBar&lapbar=@ViewBag.LapBar&denhue=@ViewBag.DenHue&radhue=@ViewBag.RadHue&laphue=@ViewBag.LapHue&denplot=@ViewBag.DenPlot&radplot=@ViewBag.RadPlot&lapplot=@ViewBag.LapPlot&pdbcode=@ViewBag.PdbCode&c_xyz=@ViewBag.cXYZ&l_xyz=@ViewBag.lXYZ&p_xyz=@ViewBag.pXYZ&ca=@ViewBag.cAtom&la=@ViewBag.lAtom&pa=@ViewBag.pAtom&fos=@ViewBag.Fos&fcs=@ViewBag.Fcs&width=@ViewBag.Width&gap=@ViewBag.Gap&ydots=@ViewBag.YellowDots&gdots=@ViewBag.GreenDots&sdcap=@ViewBag.SdCap&sdfloor=@ViewBag.SdFloor">
                <path d="M100,50 92,54 92,46Z" fill="rgba(0,0,0,0.8)"><title>tilt right</title></path></a>
                
                <a href="Slice?nav=anti&denbar=@ViewBag.DenBar&radbar=@ViewBag.RadBar&lapbar=@ViewBag.LapBar&denhue=@ViewBag.DenHue&radhue=@ViewBag.RadHue&laphue=@ViewBag.LapHue&denplot=@ViewBag.DenPlot&radplot=@ViewBag.RadPlot&lapplot=@ViewBag.LapPlot&pdbcode=@ViewBag.PdbCode&c_xyz=@ViewBag.cXYZ&l_xyz=@ViewBag.lXYZ&p_xyz=@ViewBag.pXYZ&ca=@ViewBag.cAtom&la=@ViewBag.lAtom&pa=@ViewBag.pAtom&fos=@ViewBag.Fos&fcs=@ViewBag.Fcs&width=@ViewBag.Width&gap=@ViewBag.Gap&ydots=@ViewBag.YellowDots&gdots=@ViewBag.GreenDots&sdcap=@ViewBag.SdCap&sdfloor=@ViewBag.SdFloor">
                <path d="M20,20 15,15 10,25Z" fill="rgba(0,0,0,0.8)"><title>anti-clockwise</title></path></a>
                
                <a href="Slice?nav=clock&denbar=@ViewBag.DenBar&radbar=@ViewBag.RadBar&lapbar=@ViewBag.LapBar&denhue=@ViewBag.DenHue&radhue=@ViewBag.RadHue&laphue=@ViewBag.LapHue&denplot=@ViewBag.DenPlot&radplot=@ViewBag.RadPlot&lapplot=@ViewBag.LapPlot&pdbcode=@ViewBag.PdbCode&c_xyz=@ViewBag.cXYZ&l_xyz=@ViewBag.lXYZ&p_xyz=@ViewBag.pXYZ&ca=@ViewBag.cAtom&la=@ViewBag.lAtom&pa=@ViewBag.pAtom&fos=@ViewBag.Fos&fcs=@ViewBag.Fcs&width=@ViewBag.Width&gap=@ViewBag.Gap&ydots=@ViewBag.YellowDots&gdots=@ViewBag.GreenDots&sdcap=@ViewBag.SdCap&sdfloor=@ViewBag.SdFloor">                
                <path d="M80,20 85,15 90,25Z" fill="rgba(0,0,0,0.8)"><title>clockwise</title></path></a>
                <clipPath id="cut-off">
                <rect x="0" y="0" width="70" height="50"/>
                </clipPath>
                <a href="Slice?nav=back&denbar=@ViewBag.DenBar&radbar=@ViewBag.RadBar&lapbar=@ViewBag.LapBar&denhue=@ViewBag.DenHue&radhue=@ViewBag.RadHue&laphue=@ViewBag.LapHue&denplot=@ViewBag.DenPlot&radplot=@ViewBag.RadPlot&lapplot=@ViewBag.LapPlot&pdbcode=@ViewBag.PdbCode&c_xyz=@ViewBag.cXYZ&l_xyz=@ViewBag.lXYZ&p_xyz=@ViewBag.pXYZ&ca=@ViewBag.cAtom&la=@ViewBag.lAtom&pa=@ViewBag.pAtom&fos=@ViewBag.Fos&fcs=@ViewBag.Fcs&width=@ViewBag.Width&gap=@ViewBag.Gap&ydots=@ViewBag.YellowDots&gdots=@ViewBag.GreenDots&sdcap=@ViewBag.SdCap&sdfloor=@ViewBag.SdFloor">                
                <circle cx="50" cy="50" r="20" fill="darkseagreen"><title>back</title></circle></a>
                
                <a href="Slice?nav=fwd&denbar=@ViewBag.DenBar&radbar=@ViewBag.RadBar&lapbar=@ViewBag.LapBar&denhue=@ViewBag.DenHue&radhue=@ViewBag.RadHue&laphue=@ViewBag.LapHue&denplot=@ViewBag.DenPlot&radplot=@ViewBag.RadPlot&lapplot=@ViewBag.LapPlot&pdbcode=@ViewBag.PdbCode&c_xyz=@ViewBag.cXYZ&l_xyz=@ViewBag.lXYZ&p_xyz=@ViewBag.pXYZ&ca=@ViewBag.cAtom&la=@ViewBag.lAtom&pa=@ViewBag.pAtom&fos=@ViewBag.Fos&fcs=@ViewBag.Fcs&width=@ViewBag.Width&gap=@ViewBag.Gap&ydots=@ViewBag.YellowDots&gdots=@ViewBag.GreenDots&sdcap=@ViewBag.SdCap&sdfloor=@ViewBag.SdFloor">                
                <circle cx="50" cy="50" r="20" fill="lightseagreen" clip-path="url(#cut-off)"><title>fwd</title></circle></a>
            </svg>
        </div>





        </td>
        </tr>
        </table>
        <hr />
        <a href=@ViewBag.BrowseAtoms target="_blank">Browse atoms</a>
    </div>
</div>
<!-- #################################### TAB DISPLAY SECTION SETTINGS ######################################-->
<div id="Settings" class="tabcontent" style="display:@ViewBag.T2Display">
    <h3>Settings</h3>
    <div>
        <table>
            <tr>                
                <td style="background-color:aliceblue;color:crimson;border-top-color:aliceblue;border-bottom-color:aliceblue;border-left-color:aliceblue;">Interpolation method</td>
                <td>Interp=</td>
                <td>@ViewBag.Interp</td>
                <th>  <input type="submit" value="nearest" id="nearest" onclick="SubmitInterp('NEAREST')" /></th>
                <th>  <input type="submit" value="linear" id="linear" onclick="SubmitInterp('LINEAR')" /></th>
                <th>  <input type="submit" value="bspline" id="bspline" onclick="SubmitInterp('BSPLINE3')" /></th>                                
                <td style="width:35px;background-color:aliceblue;color:crimson;border-top-color:aliceblue;border-bottom-color:aliceblue;border-right-color:aliceblue;"> </td>
                <td style="background-color:aliceblue;color:crimson;border-top-color:aliceblue;border-bottom-color:aliceblue;border-left-color:aliceblue;">Fo's and Fc's</td>
                <td>Fos=</td>
                <td><input style="width:35px;" type="text" id="fos" name="fos" value=@ViewBag.Fos></td>
                <td>Fcs=</td>
                <td><input style="width:35px;" type="text" id="fcs" name="fcs" value=@ViewBag.Fcs></td>
            </tr>
        </table>    
    <table>
        <tr>
            <td style="background-color:aliceblue;color:crimson;border-top-color:aliceblue;border-bottom-color:aliceblue;border-left-color:aliceblue;">Density Range (standard deviations)</td>
            <td>Min=@ViewBag.DenMin</td>
            <td>Floor=<span><input style="width:50px" type="text" id="sdfloor" name="sdfloor" value=@ViewBag.SdFloor></span></td>
            <td><input type="range" min=@ViewBag.DenMin max=0 value=@ViewBag.SdFloor step="0.1" style="direction:ltr" id="rangeValueMin"></td>
            <td><input type="range" min=0 max=@ViewBag.DenMax value=@ViewBag.SdCap step="0.1" style="direction:ltr" id="rangeValueMax"></td>
            <td>Cap=<span><input style="width:50px" type="text" id="sdcap" name="sdcap" value=@ViewBag.SdCap></span></td>
            <td>Max=@ViewBag.DenMax</td>
        </tr>        
    </table>         
     <table>
        <tr>
            <td style="background-color:aliceblue;color:crimson;border-top-color:aliceblue;border-bottom-color:aliceblue;border-left-color:aliceblue;">Width(Å)=</td>
            <th><input type="submit" value="-0.5" id="minus" onclick="ChangeWidth('-0.5')" /></th> 
            <td><input style="width:80px;" type="text" id="width" name="width" value=@ViewBag.Width></td>
            <th><input type="submit" value="+0.5" id="plus" onclick="ChangeWidth('0.5')" /></th>                       
            <td style="background-color:aliceblue;color:crimson;border-top-color:aliceblue;border-bottom-color:aliceblue;">Sample spacing(Å)=</td>
            <th><input type="submit" value="-0.01" id="minus" onclick="ChangeSpace('-0.01')" /></th>                               
            <td><input style="width:80px;" type="text" id="gap" name="gap" value=@ViewBag.Gap></td>
            <th><input type="submit" value="+0.01" id="plus" onclick="ChangeSpace('0.01')" /></th>
            <td style="width:35px;background-color:aliceblue;color:crimson;border-top-color:aliceblue;border-bottom-color:aliceblue;border-right-color:aliceblue;"> </td>
            <th style="background-color:DarkSlateGray;color:crimson;border:none;"><input type="submit" value="Update" /></th>
        </tr>
    </table>
    </div>
</div>
<!-- ############################# TAB NAVIGATION ########################################## -->
<div id="Navigation" class="tabcontent" style="display:@ViewBag.T3Display">
    <h3>Navigation</h3>
    <table class="nav-tbl" style="margin-left:auto;margin-right:auto;">        
    <tr>
    <td><input type="image" src="~/images/pnlAnti.png" style="vertical-align:text-bottom" onclick="NavPressed('anti')"/></td>
    <td></td>
    <td><input type="image" src="~/images/pnlTiltOver.png" style="vertical-align:text-bottom" onclick="NavPressed('tilt_up')"/></td>            
    <td></td>
    <td><input type="image" src="~/images/pnlClock.png" style="vertical-align:text-bottom"  onclick="NavPressed('clock')"/></td>
    </tr>
    <tr>
    <td></td>
    <td></td>
    <td><input type="submit" value="Up" style="background-color:crimson;color:aliceblue;vertical-align:text-bottom"  onclick="NavPressed('up')"/></td>            
    <td></td>
    <td></td>
    </tr>
    <tr>
    <td><input type="image" src="~/images/pnlTiltLeft.png" style="vertical-align:text-bottom"  onclick="NavPressed('tilt_left')"/></td>
    <td><input type="submit" value="Left" style="background-color:crimson;color:aliceblue;vertical-align:text-bottom"  onclick="NavPressed('left')"/></td>
    <td>
        <input type="submit" value="Fwd" style="background-color:dodgerblue;color:black;vertical-align:text-bottom"  onclick="NavPressed('fwd')"/>
        <input type="submit" value="Back" style="background-color:deepskyblue;color:black;vertical-align:text-bottom"  onclick="NavPressed('back')"/>
    </td>
    <td><input type="submit" value="Right" style="background-color:crimson;color:aliceblue;vertical-align:text-bottom" onclick="NavPressed('right')" /></td>
    <td><input type="image" src="~/images/pnlTiltRight.png" style="vertical-align:text-bottom"  onclick="NavPressed('tilt_right')"/></td>
    </tr>        
    <tr>
    <td></td>
    <td></td>
    <td><input type="submit" value="Down" style="background-color:crimson;color:aliceblue;vertical-align:text-bottom"  onclick="NavPressed('down')"/></td>
    <td></td>
    <td></td>
    </tr>
    <tr>
    <td></td>
    <td></td>
    <td><input type="image" src="~/images/pnlTiltUnder.png" style="vertical-align:text-bottom"  onclick="NavPressed('tilt_down')"/></td>            
    <td></td>
    <td></td>
    </tr>
    </table>
</div>
<!-- ############################# TAB ADVANCED ########################################## -->
<div id="Admin" class="tabcontent" style="display:@ViewBag.T4Display">
    <h3>Advanced</h3>            
    <table>
    <tr>
        <td style="background-color:aliceblue;color:crimson;border-top-color:aliceblue;border-bottom-color:aliceblue;border-left-color:aliceblue;">Extra Interpolation methods</td>
        <td>Interp=</td>
        <td>@ViewBag.Interp</td>
        <th>  <input type="submit" value="nearest" id="nearest" onclick="SubmitInterp('NEAREST')" /></th>
        <th>  <input type="submit" value="linear" id="linear" onclick="SubmitInterp('LINEAR')" /></th>
        <th>  <input type="submit" value="cubic" id="bspline" onclick="SubmitInterp('CUBIC')" /></th>                                        
        <th>  <input type="submit" value="bspline" id="bspline" onclick="SubmitInterp('BSPLINE3')" /></th>                                        
        <th>  <input type="submit" value="bsplinewhole" id="bspline" onclick="SubmitInterp('BSPLINEWHOLE')" /></th>                                                
    </tr>    
    </table>            
    <table>
    <tr>
        <td style="background-color:aliceblue;color:crimson;border-top-color:aliceblue;border-bottom-color:aliceblue;border-left-color:aliceblue;">Toggle between values and standard deviation</td>
        <td>Density=</td>
        <td>@ViewBag.ValSd</td>
        <th><input type="submit" value="st.devs" id="st.devs" onclick="SubmitValSd('s.d.')" /></th>
        <th><input type="submit" value="electrons" id="electrons" onclick="SubmitValSd('electrons')" /></th>        
    </tr>
    </table>        
    <table>
    <tr>
        <td style="background-color:aliceblue;color:crimson;border-top-color:aliceblue;border-bottom-color:aliceblue;border-left-color:aliceblue;">Choose range for nearest atoms: (-1,-1)= none, (0,0)=nearest, otherwise specify a range</td>
        <td>Min Nearest</td>
        <td><input id="hover_min" value=@ViewBag.HoverMin name="hover_min" /></td>
        <td>Max Nearest</td>
        <td><input id="hover_max" value=@ViewBag.HoverMax name="hover_max" /></td>
    </tr>
    </table>    
    <p>Turn dots on and off for atom positions and placements</p>
    <table class="inner-tbl">
    <tr>    
    <td>Atom dots=</td>
    <td><input type="radio" id="gon" name="green_dots" value="Y" onclick="myAtomDots()" /></td>
    <td><label for="gon">Y</label></td>
    <td><input type="radio" id="goff" name="green_dots" value="N" onclick="myAtomDots()" /></td>
    <td><label for="gon">N</label></td>
    </tr>
    <tr>    
    <td>Position dots=</td>
    <td><input type="radio" id="on" name="yell_dots" value="Y" onclick="myPositionDots()" /></td>
    <td><label for="on">Y</label></td>
    <td><input type="radio" id="off" name="yell_dots" value="N" onclick="myPositionDots()" /></td>
    <td><label for="on">N</label></td>
    </tr>
            <hr />
    </table>      
    @Html.ActionLink(
    linkText: "Get link",
    actionName: "Slice",
    controllerName: "Matrix",
    routeValues: new {
    denbar = ViewBag.DenBar,
    radbar = ViewBag.RadBar,
    lapbar = ViewBag.LapBar,
    denhue = ViewBag.DenHue,
    radhue = ViewBag.RadHue,
    laphue = ViewBag.LapHue,
    denplot = ViewBag.DenPlot,
    radplot = ViewBag.RadPlot,
    lapplot = ViewBag.LapPlot,
    pdbcode = @ViewBag.PdbCode,
    c_xyz = @ViewBag.cXYZ,
    l_xyz = @ViewBag.lXYZ,
    p_xyz = @ViewBag.pXYZ,
    ca = @ViewBag.cAtom,
    la = @ViewBag.lAtom,
    pa = @ViewBag.pAtom,
    fos = @ViewBag.Fos,
    fcs = @ViewBag.Fcs,
    width = @ViewBag.Width,
    gap = @ViewBag.Gap,
    ydots = @ViewBag.YellowDots,
    gdots = @ViewBag.GreenDots,
    sdcap = @ViewBag.SdCap,
    sdfloor = @ViewBag.SdFloor,
    },
    htmlAttributes: null
    )
    
    <input type="submit" value="Update" />
</div>
<!-- ########################################### The actual plots################################### -->
<hr />
<div class="tab">
    <table cellpadding="0" cellspacing="0" style="width:100%;table-layout: fixed;">
        <tr>
            <th style="width:33%">Density - @ViewBag.DenPlot</th>
            <th style="width:33%">Radient - @ViewBag.RadPlot</th>
            <th style="width:33%">Laplacian - @ViewBag.LapPlot</th>
        </tr>            
        <tr>            
            <td><table cellpadding="0" cellspacing="0" style="width:100%;table-layout:fixed;border:none;"><tr>
                <th style="border:none;background-color:snow;"><input type="submit" value="Toggle Plot" id="tp" onclick="TogglePlot('density')" style="border:none;background-color:snow;"/></th>
                <th style="border:none;background-color:snow;"><input type="submit" value="Toggle Hue" id="th" onclick="ToggleHue('density')" style="border:none;background-color:snow;"/></th>
                <th style="border:none;background-color:snow;"><input type="submit" value="Toggle Bar" id="tb" onclick="ToggleBar('density')" style="border:none;background-color:snow;"/></th>
            </tr></table></td>
            <td><table cellpadding="0" cellspacing="0" style="width:100%;table-layout:fixed;border:none;"><tr>
                <th style="border:none;background-color:snow;"><input type="submit" value="Toggle Plot" id="tp" onclick="TogglePlot('radient')" style="border:none;background-color:snow;"/></th>
                <th style="border:none;background-color:snow;"><input type="submit" value="Toggle Hue" id="th" onclick="ToggleHue('radient')" style="border:none;background-color:snow;"/></th>
                <th style="border:none;background-color:snow;"><input type="submit" value="Toggle Bar" id="tb" onclick="ToggleBar('radient')" style="border:none;background-color:snow;"/></th>
            </tr></table></td>
            <td><table cellpadding="0" cellspacing="0" style="width:100%;table-layout:fixed;border:none;"><tr>
                <th style="border:none;background-color:snow;"><input type="submit" value="Toggle Plot" id="tp" onclick="TogglePlot('laplacian')" style="border:none;background-color:snow;"/></th>
                <th style="border:none;background-color:snow;"><input type="submit" value="Toggle Hue" id="th" onclick="ToggleHue('laplacian')" style="border:none;background-color:snow;"/></th>
                <th style="border:none;background-color:snow;"><input type="submit" value="Toggle Bar" id="tb" onclick="ToggleBar('laplacian')" style="border:none;background-color:snow;"/></th>
            </tr></table></td>
        </tr>
        <tr>
            <td><div id="myCountour"></div></td>
            <td><div id="myCountourRad"></div></td>
            <td><div id="myCountourLap"></div></td>
        </tr>
    </table>
</div>
<hr />
<!-- ################################ The java script ############################### -->



}
<div>
    </p>@ViewBag.Error<p>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script>
    function openTab(evt, tabName) {
    @ViewBag.T1Display = 'block'
    @ViewBag.T2Display = 'block'
    @ViewBag.T3Display = 'block'
    @ViewBag.T4Display = 'block'

    }
</script>
<script>
    function openCity(evt, cityName) {
        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }
        document.getElementById(cityName).style.display = "block";
        evt.currentTarget.className += " active";
        localStorage.setItem('activeTab', document.getElementById(cityName))                
    }

    function openTab(evt, tabName) {
    @ViewBag.T1Display = 'block'
    @ViewBag.T2Display = 'block'
    @ViewBag.T3Display = 'block'
    @ViewBag.T4Display = 'block'
        
    }
</script>
<script>
   function makePlots(sdfloor,sdcap,isDots,isAtoms) {
        var jx = @Html.Raw(Json.Serialize(@ViewBag.SliceAxis));
        var jy = @Html.Raw(Json.Serialize(@ViewBag.SliceAxis));    
        var jv = @Html.Raw(Json.Serialize(@ViewBag.SliceDensity));
        var anno = @Html.Raw(Json.Serialize(@ViewBag.Annotations));    
        var jpX = @Html.Raw(Json.Serialize(@ViewBag.SlicePositionX));    
        var jpY = @Html.Raw(Json.Serialize(@ViewBag.SlicePositionY));    
        var jaXg = @Html.Raw(Json.Serialize(@ViewBag.SliceProjGreenAtomsX));    
        var jaYg = @Html.Raw(Json.Serialize(@ViewBag.SliceProjGreenAtomsY));    
        var jaXb = @Html.Raw(Json.Serialize(@ViewBag.SliceProjBlueAtomsX));    
        var jaYb = @Html.Raw(Json.Serialize(@ViewBag.SliceProjBlueAtomsY));    
        var japX = @Html.Raw(Json.Serialize(@ViewBag.SlicePlaneAtomsX));    
        var japY = @Html.Raw(Json.Serialize(@ViewBag.SlicePlaneAtomsY));    
        var jvr = @Html.Raw(Json.Serialize(@ViewBag.SliceRadient));
        var jvl = @Html.Raw(Json.Serialize(@ViewBag.SliceLaplacian));
        var minv = -2
        var maxv = 10    
        var minl = @Html.Raw(Json.Serialize(@ViewBag.LMin));
        var maxl = @Html.Raw(Json.Serialize(@ViewBag.LMax));
    
        var denmin = @Html.Raw(Json.Serialize(@ViewBag.DenMin));
        var denmax = @Html.Raw(Json.Serialize(@ViewBag.DenMax));
        var numsd = @Html.Raw(Json.Serialize(@ViewBag.SdCap));
        var numsdfloor = @Html.Raw(Json.Serialize(@ViewBag.SdFloor));

        var lenD = jv.length;
        var lenR = jvr.length;
        var lenL = jvl.length;

        if (sdfloor != -1){
            numsdfloor = sdfloor;
        }
        if (sdcap != -1){
            numsd = sdcap;
        }
    
        var dhue = @Html.Raw(Json.Serialize(@ViewBag.DenHue));
        var rhue = @Html.Raw(Json.Serialize(@ViewBag.RadHue));
        var lhue = @Html.Raw(Json.Serialize(@ViewBag.LapHue));

        var dbar = @Html.Raw(Json.Serialize(@ViewBag.DenBar))=="Y";
        var rbar = @Html.Raw(Json.Serialize(@ViewBag.RadBar))=="Y";
        var lbar = @Html.Raw(Json.Serialize(@ViewBag.LapBar))=="Y";

        var minc = Math.round(numsdfloor * 100) / 100
        var maxc = Math.round(numsd*100)/100
        var size = (maxc - minc) / 20
        var zero_frac = 0.001            
        zero_frac = (0 - minc) / (maxc - minc)
        var lev1 = zero_frac + 0.1 * (1 - zero_frac)    
        var lev2 = zero_frac + 0.2 * (1 - zero_frac)
        var lev3 = zero_frac + 0.75 * (1 - zero_frac)
        var cs = []
            
        if (dhue == "RedBlueGrey"){
            cs = [  [0, 'DimGray'], 
                    [String(zero_frac + 0.0001), 'Snow'], 
                    [String(zero_frac + 0.0002), 'LightBlue'], 
                    [String(lev1), 'LightBlue'], 
                    [String(lev2), 'CornflowerBlue'], 
                    [String(lev3), 'Crimson'],
                    [1, 'rgb(100, 0, 0)']]
        }    
        else if (dhue == "BlackWhite") {
            cs = [[0, 'Snow'], [1, 'Black']]
        }
        else if (dhue == "RedBlueZero") {
            cs = [[0, 'CornflowerBlue'], [String(zero_frac), 'Snow'], [1, 'Crimson']]
        }
        else {
            cs = [[0, 'LightBlue'], [0.99, 'rgb(100, 0, 0)'],[0.99, 'Black']]
        }
                 
        var sizel = (maxl - minl) / 20
        zero_frac_lap = (0 - minl) / (maxl - minl)  
        zero_frac_lap = 1 - zero_frac_lap
        var lev1 = zero_frac_lap + 0.1 * (1 - zero_frac_lap)
        var lev2 = zero_frac_lap + 0.3 * (1 - zero_frac_lap)
        var lev3 = zero_frac_lap + 0.5 * (1 - zero_frac_lap)
        if (lhue == "RedBlueGrey") {
            cs_lap = [[0, 'DimGray'], [String(zero_frac_lap + 0.001), 'AliceBlue'], [String(lev1), 'LightBlue'], [String(lev2), 'CornflowerBlue'], [String(lev3), 'Crimson'], [1, 'rgb(100, 0, 0)']]
        }
        else if (lhue == "BlackWhite") {
            cs_lap = [[0, 'Snow'], [1, 'Black']]
        }
        else if (lhue == "RedBlueZero") {
            cs_lap = [[0, 'CornflowerBlue'], [String(zero_frac_lap), 'AliceBlue'],[String(lev1), 'Snow'], [1, 'Crimson']]
        }
        else {
            cs_lap = [[0, 'LightBlue'], [0.99, 'rgb(100, 0, 0)'],[1, 'Black']]
        }
      
       if (rhue == "RedBlueGrey") {
            cs_rad = [[0, 'DimGray'], [0.2, 'AliceBlue'], [0.4, 'LightBlue'], [0.6, 'CornflowerBlue'], [0.8, 'Crimson'], [1, 'rgb(100, 0, 0)']]
       }
        else if (rhue == "BlackWhite") {
            cs_rad = [[0, 'Black'], [1, 'Snow']]
       }
       else if (rhue == "RedBlueZero") {
            cs_rad = [[0, 'CornflowerBlue'], [0.49, 'AliceBlue'], [0.51, 'Snow'], [1, 'Crimson']]
        }
       else {
            cs_rad = [[0, 'LightBlue'], [0.99, 'rgb(100, 0, 0)'],[1, 'Black']]
       }

       col_bar = {  title: "",
                    thickness: 15,                                        
                    len:0.85,
                    x:+.95}

       var denplot = @Html.Raw(Json.Serialize(@ViewBag.DenPlot));
       var radplot = @Html.Raw(Json.Serialize(@ViewBag.RadPlot));
       var lapplot = @Html.Raw(Json.Serialize(@ViewBag.LapPlot));


        var huetitle = @Html.Raw(Json.Serialize(@ViewBag.ValSd)) + "<br>max=" + denmax;
    
        if (isDots){
            var dataP = {        
                x: jpX,
                y: jpY,
                hoverinfo:'none',
                mode: 'markers',
                type: "scatter",
                colorscale: [[0, 'rgba(0,0,0,0)'], [1, 'rgba(0, 100, 0,1)']],
                showscale: false,     
                name:"pos data",
                marker: {
                    color: 'Gold',
                    size: 4,            
                },
            }
        }
        else{
            var dataP = {
                x: [],
                y: [],
                mode: 'markers',
                type: "scatter",                
            }

        }

        if (isAtoms){
            var dataA = {        
                x: jaXg,
                y: jaYg,
                hoverinfo:'none',
                mode: 'markers',
                type: "scatter",
                colorscale: [[0, 'rgba(0,0,0,0)'], [1, 'rgba(0, 100, 0,1)']],
                showscale: false,     
                name:"atom data",
                marker: {
                    color: 'limegreen',
                    size: 4,            
                },
            }
            var dataB = {        
                x: jaXb,
                y: jaYb,
                hoverinfo:'none',
                mode: 'markers',
                type: "scatter",
                colorscale: [[0, 'rgba(0,0,0,0)'], [1, 'rgba(0, 100, 0,1)']],
                showscale: false,     
                name:"atom data",
                marker: {
                    color: 'cyan',
                    size: 4,            
                },
            }
            var dataAP = {        
                x: japX,
                y: japY,
                hoverinfo:'none',
                mode: 'markers',
                type: "scatter",
                colorscale: [[0, 'rgba(0,0,0,0)'], [1, 'rgba(0, 100, 0,1)']],
                showscale: false,     
                name:"atom data",
                marker: {
                    color: 'yellow',
                    size: 4,            
                },
            }
        }
        else{
            var dataA = {
                x: [],
                y: [],
                mode: 'markers',
                type: "scatter",                
            }
            var dataB = {
                x: [],
                y: [],
                mode: 'markers',
                type: "scatter",                
            }
            var dataAP = {
                x: [],
                y: [],
                mode: 'markers',
                type: "scatter",                
            }

        }
        
        if (denplot == "heatmap"){
            var dataV = {
                z: jv,
                x: jx,
                y: jy,        
                text:anno,                                
                hovertemplate:'Val:%{z:.4f}<br>Atoms:%{text}',
                zmin: minc,
                zmax:maxc,
                type: denplot,
                colorscale: cs,
                reversescale: false,            
                line: {
                    width: 0.5,
                    color: 'DimGray'
                },            
                showscale: dbar,
                colorbar: col_bar,            
                name:"Density",
            };
        }
        else{
            var dataV = {
                z: jv,
                x: jx,
                y: jy,
                text:anno,                                
                hovertemplate:'Val:%{z:.4f}<br>Atoms:%{text}',                
                hoverlabel:{bgcolor:'rgba(1,1,1,0.05)',align:'left'},
                type: denplot,
                colorscale: cs,
                reversescale: false,
                autocontour: false,
                line: {
                    width: 0.5,
                    color: 'DimGray'
                },
                contours: {
                    start: minc,
                    end: maxc,
                    size: size
                },
                showscale:dbar,
                colorbar: col_bar,            
                name: "Density",
            };
        }

        data = [dataV,dataP,dataA,dataB,dataAP]
   
        var dataR = [{
            z: jvr,
            x: jx,
            y: jy,
            text:anno,                                
            hovertemplate:'Val:%{z:.4f}<br>Atoms:%{text}',
            type: radplot,
            colorscale: cs_rad,
            reversescale: false,
            autocontour: true,
            line: {
                width: 0,
                color: 'DimGray'
            },        
            showscale: rbar,
            colorbar: col_bar,    
            name: "Radient",
        }, dataP,dataA,dataB,dataAP];

        if (lapplot == "heatmap") {
            var dataL = [{
                z: jvl,
                x: jx,
                y: jy,
                text:anno,                                
                hovertemplate:'Val:%{z:.4f}<br>Atoms:%{text}',
                zmin: minl,
                zmax: maxl,
                type: lapplot,
                colorscale: cs_lap,
                reversescale: true,                
                line: {
                    width: 0.5,
                    color: 'DimGray'
                },
                showscale: lbar,
                colorbar: col_bar,  
                name: "Laplacian",
            }, dataP,dataA,dataB,dataAP];
        }
        else{
            var dataL = [{
            z: jvl,
            x: jx,
            y: jy,    
            text:anno,                                
            hovertemplate:'Val:%{z:.4f}<br>Atoms:%{text}',
            type: lapplot,
            colorscale: cs_lap,
            reversescale: true,
            autocontour: false,
            line: {
                width: 0.5,
                color: 'DimGray'
            },        
            showscale: lbar,
            colorbar: col_bar,            
            name: "Laplacian",
            contours: {
                    start: minl,
                    end: maxl,
                    size: sizel
                },
        }, dataP,dataA,dataB,dataAP];
        }
        
       
    
        var layout = {
            grid: { rows: 1, columns: 1, pattern: 'independent' },
            autosize: true,
            title: '',
            showlegend: false,                   
            xaxis: {
                showgrid: false,
                zeroline: false,
                visible: false,
            },
            xaxis2: {
                showgrid: false,
                zeroline: false,
                visible: false,
            },
            xaxis3: {
                showgrid: false,
                zeroline: false,
                visible: false,
            },
            xaxis4: {
                showgrid: false,
                zeroline: false,
                visible: false,
            },
            xaxis5: {
                showgrid: false,
                zeroline: false,
                visible: false,
            },
            yaxis: {
                scaleanchor: 'x',
                scaleratio: 1,
                visible: false,
            },
            yaxis2: {
                scaleanchor: 'x',
                scaleratio: 1,
                visible: false,
            },
            yaxis3: {
                scaleanchor: 'x',
                scaleratio: 1,
                visible: false,
            },
            yaxis4: {
                scaleanchor: 'x',
                scaleratio: 1,
                visible: false,
            },
            yaxis5: {
                scaleanchor: 'x',
                scaleratio: 1,
                visible: false,
            },
            margin: {
                l: 20,
                r: 80,
                b: 20,
                t: 20,
                pad: 4
            },                  
        };
    
        var config = { responsive: true, 
            toImageButtonOptions:{scale:6,width:540,height:540}
        }

        annos = {}
        
        layoutD = layout
        layoutR = layout
        layoutL = layout
        
        if (lenD > 0){
            Plotly.newPlot('myCountour', data, layoutD, config,annos);
        }
        if (lenR > 0){
            Plotly.newPlot('myCountourRad', dataR, layoutR, config);
        }
        if (lenL > 0){
            Plotly.newPlot('myCountourLap', dataL, layoutL, config);
        }
    }
    var numsd = @Html.Raw(Json.Serialize(@ViewBag.SdCap));
    var numsdfloor = @Html.Raw(Json.Serialize(@ViewBag.SdFloor));        
    var ydots = document.getElementById("ydots").value.trim();
    var gdots = document.getElementById("gdots").value.trim();
    makePlots(numsdfloor, numsd, ydots=="Y",gdots=="Y");
</script>

<script>
    var sliderMax = document.getElementById("rangeValueMax");
    var outputMax = document.getElementById("sdcap");

    var sliderMin = document.getElementById("rangeValueMin");
    var outputMin = document.getElementById("sdfloor");

    sliderMin.oninput = function () {
        outputMin.value = this.value;
        var outputMax = document.getElementById("sdcap");
        var ydots = document.getElementById("ydots").value.trim();
        var gdots = document.getElementById("gdots").value.trim();
        makePlots(outputMin.value, outputMax.value, ydots == "Y", gdots == "Y");
    }
    sliderMax.oninput = function () {
        outputMax.value = this.value;
        var outputMin = document.getElementById("sdfloor");
        var ydots = document.getElementById("ydots").value.trim();
        var gdots = document.getElementById("gdots").value.trim();
        makePlots(outputMin.value, outputMax.value, ydots == "Y", gdots == "Y");
    }
    function myPositionDots() {
        var outputMin = document.getElementById("sdfloor");
        var outputMax = document.getElementById("sdcap");
        var optOn = document.getElementById("on");
        var optOff = document.getElementById("off");

        if (optOn.checked == true) {
            document.getElementById("ydots").value = "Y";
        }
        if (optOff.checked == true) {
            document.getElementById("ydots").value = "N";
        }
        var ydots = document.getElementById("ydots").value.trim();
        var gdots = document.getElementById("gdots").value.trim();
        makePlots(outputMin.value, outputMax.value, ydots == "Y", gdots == "Y");
    }
    function myAtomDots() {
        var outputMin = document.getElementById("sdfloor");
        var outputMax = document.getElementById("sdcap");
        var optgOn = document.getElementById("gon");
        var optgOff = document.getElementById("goff");

        if (optgOn.checked == true) {
            document.getElementById("gdots").value = "Y";
        }
        if (optgOff.checked == true) {
            document.getElementById("gdots").value = "N";
        }
        var ydots = document.getElementById("ydots").value.trim();
        var gdots = document.getElementById("gdots").value.trim();
        makePlots(outputMin.value, outputMax.value, ydots == "Y", gdots == "Y");
    }
</script>
<script>
    function SubmitInterp(interp) {
        document.getElementById("interp").value = interp;
    }
</script>
<script>
    function ChangeWidth(val) {
        var new_wdth = parseFloat(document.getElementById("width").value) + parseFloat(val)
        document.getElementById("width").value = new_wdth;
    }
</script>
<script>
    function ChangeSpace(val) {
        var new_gap = parseFloat(document.getElementById("gap").value) + parseFloat(val)
        document.getElementById("gap").value = new_gap;
    }
</script>
<script>
    function ChangeTab(tab) {
        if (tab == 't1'){
            document.getElementById("t1").value = 1;
        }
        else if (tab == 't2'){
            document.getElementById("t2").value = 1;
        }
        else if (tab == 't3'){
            document.getElementById("t3").value = 1;
        }
        else if (tab == 't4'){
            document.getElementById("t4").value = 1;
        }                
    }
</script>
<script>
    function SubmitValSd(val) {
        document.getElementById("valsd").value  = val;  
    }
</script>
<script>
    function TogglePlot(plot){
        if (plot == "density"){
            document.getElementById("denplot").value  = "+1";
        }
        else if (plot == "radient"){
            document.getElementById("radplot").value  = "+1";
        }
        else if (plot == "laplacian"){
            document.getElementById("lapplot").value  = "+1";
        }
    }
    function ToggleHue(plot){
        if (plot == "density"){
            document.getElementById("denhue").value  = "+1";
        }
        else if (plot == "radient"){
            document.getElementById("radhue").value  = "+1";
        }
        else if (plot == "laplacian"){
            document.getElementById("laphue").value  = "+1";
        }
    }
    function ToggleBar(plot){
        if (plot == "density"){
            document.getElementById("denbar").value  = "+1";
        }
        else if (plot == "radient"){
            document.getElementById("radbar").value  = "+1";
        }
        else if (plot == "laplacian"){
            document.getElementById("lapbar").value  = "+1";
        }
    }
</script>
<script>
    function NavPressed(nav){
        document.getElementById("nav").value  = nav;        
    }
</script>
<!-- https://www.aspsnippets.com/Articles/ASPNet-Core-Call-Controller-Action-using-JavaScript.aspx -->
<script type="text/javascript">
    function NavPressed2(nav){
        document.getElementById("nav").value  = nav;  
       
    }
</script>

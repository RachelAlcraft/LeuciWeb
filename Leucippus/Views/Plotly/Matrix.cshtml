
@{
    ViewData["Title"] = "Matrix";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Electron Density Matrix Explorer - @ViewBag.PdbCode</h1>
<hr/>
<div>
<h5>Interactive matrix explorer - planes</h5>


<table style="border:none;">
    <tr>
    <td style="border:none;">
@using (Html.BeginForm("Matrix", "Plotly", FormMethod.Post))
    {
        <table cellpadding="0" cellspacing="0" style="background-color:PowderBlue">
            <tr style="height:25%">
                <th colspan="2" align="center">Protein Structure</th>
            </tr>
            <tr style="height:25%">
                <td>PdbCode: </td>
                <td>
                    <input type="text" id="pdbcode" name="pdbcode" value=@ViewBag.PdbCode width="20px"">
                </td>
            </tr>
            <tr style="height:25%">
                <td>Layer: </td>
                <td>
                    <input type="text" id="layer" name="layer" value=@ViewBag.Layer width="20px"">
                </td>
            </tr>            
            <tr style="height:25%;background-color:Crimson;">
                <td></td>
                <td><input type="submit" value="Submit"/></td>
            </tr>
        </table>
    }
    </td>
    <td style="border:none;">

<table cellpadding="0" cellspacing="0" style="background-color:PowderBlue">
    <tr style="height:25%">
        <th>Click to choose plane</th><th>Click to increment layer</th>
    </tr>
    <tr style="height:25%">
        <td>
            @Html.ActionLink(
    linkText: "XY Plane",
    actionName: "Matrix",
    controllerName: "Plotly",
    routeValues: new {
        pdbcode = @ViewBag.PdbCode,
        plane = "XY", 
        layer = @ViewBag.Layer
    },
    htmlAttributes: null
    )
    <span> ~ </span>
    @Html.ActionLink(
    linkText: "YZ Plane",
    actionName: "Matrix",
    controllerName: "Plotly",
    routeValues: new {
        pdbcode = @ViewBag.PdbCode,
        plane = "YZ", 
        layer = @ViewBag.Layer
    },
    htmlAttributes: null
    )
    <span> ~ </span>
    @Html.ActionLink(
    linkText: "ZX Plane",
    actionName: "Matrix",
    controllerName: "Plotly",
    routeValues: new {
        pdbcode = @ViewBag.PdbCode,
        plane = "ZX", 
        layer = @ViewBag.Layer
    },
    htmlAttributes: null
    )
        </td>
        <td>
            @Html.ActionLink(
    linkText: " - 1",
    actionName: "Matrix",
    controllerName: "Plotly",
    routeValues: new {
        pdbcode = @ViewBag.PdbCode,
        plane = @ViewBag.Plane, 
        layer = @ViewBag.Layer - 1
    },
    htmlAttributes: null
    )
    <span> ~ </span>
    @Html.ActionLink(
    linkText: " + 1",
    actionName: "Matrix",
    controllerName: "Plotly",
    routeValues: new {
        pdbcode = @ViewBag.PdbCode,
        plane = @ViewBag.Plane, 
        layer = @ViewBag.Layer + 1
    },
    htmlAttributes: null
    )
        </td>
    </tr>
    <tr style="height:25%">
        <td>Chosen plane= @ViewBag.Plane</td><td>Chosen layer= @ViewBag.Layer / @ViewBag.LayerMax</td>        
    </tr>
    
</table>
</td>
</tr>
</table>

</div>
<br/>


<div><div>
    <div><div id="myCountour" style="width:40%"></div></div>    
    <hr/>
    <div><div id="myDiv" style="width:40%"></div></div>    
</div></div>
<div id="detes">
    <hr/>
    <h3>Details about @ViewBag.PdbCode electron density</h3>
    <a href=@ViewBag.EbiLink>EBI Link to @ViewBag.PdbCode</a>
    <br/>    
    @ViewBag.Info
</div>


<script>
    var jx = @Html.Raw(Json.Serialize(@ViewBag.MtxX));
    var jy = @Html.Raw(Json.Serialize(@ViewBag.MtxY));
    var jz = @Html.Raw(Json.Serialize(@ViewBag.MtxZ));    
    var jv = @Html.Raw(Json.Serialize(@ViewBag.MtxV));    
    var minv = @Html.Raw(Json.Serialize(@ViewBag.MinV));    
    var maxv = @Html.Raw(Json.Serialize(@ViewBag.MaxV));    
            
    var layoutH = {
        autosize: true,
        title: 'Electron density values in this plane'     
    };

    var traceH = {
    x: jz,
    type: 'histogram',
    nbinsx: 50,
    marker: {
        color: "LightGreen",
        line: {
            color:  "Silver", 
            width: 1
        }
    }
    };
    var dataH = [traceH];
    Plotly.newPlot('myDiv', dataH,layoutH);
    
    var data = [ {
		z: jv,
		x: jx,
		y: jy,
		type: 'contour',
        colorscale: [[0,'DarkRed'],[0.01,'Crimson'],[0.5,'LightGreen'],[1,'AliceBlue'],],
        reversescale : true,
        autocontour: false,
        contours: {
            start: minv,
            end: maxv,
            size: (maxv-minv)/10
        }	    
    }];

    var layout = {
        autosize: true,
        title: 'Contour plot of electron density plane',
        xaxis: {        
        showgrid: false,
        zeroline: false
        },
        yaxis: {
        scaleanchor: 'x',
        scaleratio: 1
        }
    };
    
    Plotly.newPlot('myCountour', data,layout);
</script>
